df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(5,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(5,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(5,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightblue")
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(3,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(3,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(3,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightblue")
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightblue")
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightgreen")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightgreen")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightgreen")
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightgreen")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightgreen")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightgreen")
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightblue","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.15),
fill = c("lightgreen","lightblue","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
marine == 1 | brackish == 1 | freshwater ==1)
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightblue")
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightgreen","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.15),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
legend("topright", inset = c(0.4, 0.5),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
legend("topright", inset = c(0.4, 1.5),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
legend("topright", inset = c(0.4, 1.3),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
legend("topright", inset = c(0.4, 1.35),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightblue")
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightgreen","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.35),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
pdf(file = paste(getwd(),"/native_and_non_native.pdf",sep=""),   # The directory you want to save the file in
width = 7.9, # The width of the plot in inches
height = 7.5) # The height of the plot in inches
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,col = "lightblue")
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightgreen","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.35),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
dev.off()
pdf(file = paste(getwd(),"/native_and_non_native.pdf",sep=""),   # The directory you want to save the file in
width = 9, # The width of the plot in inches
height = 8.7) # The height of the plot in inches
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightgreen","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.35),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
dev.off()
################################################################################
################################################################################
# End
################################################################################
# End
################################################################################
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
pdf(file = paste(getwd(),"/native_and_non_native.pdf",sep=""),   # The directory you want to save the file in
width = 9, # The width of the plot in inches
height = 8.7) # The height of the plot in inches
par(mfrow=c(2,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightgreen","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.35),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
dev.off()
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
pdf(file = paste(getwd(),"/native_and_non_native.pdf",sep=""),   # The directory you want to save the file in
width = 9, # The width of the plot in inches
height = 8.7) # The height of the plot in inches
par(mfrow=c(1,3))
df <- table(inat_data_filtered$taxon.kingdom)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
df <- table(inat_data_filtered$taxon.phylum)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.9,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
df <- table(inat_data_filtered$taxon.class)
par(mar=c(2,5,2,1)+0.1)
barplot(sort(df, decreasing = F),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE
,xlab="Number of records",col = "lightblue")
dev.off()
pdf(file = paste(getwd(),"/stacked_bars.pdf",sep=""),   # The directory you want to save the file in
width = 9, # The width of the plot in inches
height = 8.7) # The height of the plot in inches
par(mfrow=c(1,3))
for (a in 3:1){
inat_data_filtered = inat_data
inat_data_filtered = filter(inat_data_filtered,
marine == 1 | brackish == 1 | freshwater ==1)
colRefINat_data_filtered=length(inat_data_filtered)-(5+a)
taxonNames = sort(unique(
inat_data_filtered[,colRefINat_data_filtered]))
df = matrix(0,nrow=1,ncol=length(taxonNames))
colnames(df)=taxonNames
rownames(df)=c("nonNative")
colRefNatbioblitz_nns = length(natbioblitz_nns)-(5+a)
nativeTable = table(inat_data_filtered[,colRefINat_data_filtered])
nonNativeTable = table(natbioblitz_nns[,colRefNatbioblitz_nns])
for (b in 1:ncol(df)){
for (c in 1:length(dimnames(nonNativeTable)[[1]])){
if (colnames(df)[b] == dimnames(nonNativeTable)[[1]][c]){
df[b] = nonNativeTable[c]
}
}
}
df = rbind(nativeTable,df)
df2 = df
for (d in 1:ncol(df)) {
df[1,d] = df[1,d]-df[2,d]
}
par(mar=c(10,5,4,1)+0.1,xpd=TRUE)
barplot(df,
col=c("lightgreen","orange"),
horiz = TRUE, cex.names = 0.7,las = 1,border = FALSE,
space=0.04,
font.axis=2,
xlab="Number of records")
if(a==2){
legend("topright", inset = c(0.4, 1.35),
fill = c("lightblue","lightgreen","orange"),
legend=c("Both native and non-native species",
"Native species",
"Non-native species"))
}
}
dev.off()

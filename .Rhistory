title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
op = par(mfrow=c(2,4),family = "mont", font.lab = 2,
mar=c(1,3,5,1)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(2,4),family = "mont", font.lab = 2,
mar=c(1,3,5,1)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(2,4),family = "mont", font.lab = 2,
mar=c(2,3,2,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(1,4),family = "mont", font.lab = 2,
mar=c(2,3,2,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(1,3),family = "mont", font.lab = 2,
mar=c(2,3,2,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(1,3),family = "mont", font.lab = 2,
mar=c(3,3,4,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(1,3),family = "mont", font.lab = 2,
mar=c(3,3,4,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0,box.col = "white")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
dev.new(width=8, height=5, unit="in", noRStudioGD = TRUE)
op = par(mfrow=c(1,3),family = "mont", font.lab = 2,
mar=c(3,3,4,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0.01,box.col = "#191d2d")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(1,3),family = "mont", font.lab = 2,
mar=c(3,3,4,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0.01,box.col = "#191d2d")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
op = par(mfrow=c(1,3),family = "mont", font.lab = 2,
mar=c(3,3,3.5,0.5)+0.1,xpd=FALSE)
for (a in 1:length(nonNatives)) {
binomClassNm = nonNatives[a]
binomClassNmSplit = strsplit(binomClassNm,"[ ]")
genus = binomClassNmSplit[[1]][1]
species = binomClassNmSplit[[1]][2]
api=paste("https://records-ws.nbnatlas.org/occurrences/search?",
"q=*:*&fq=genus:",
genus,
"&fq=-(identification_verification_status%3A%22Unconfirmed%22%20OR",
"%20identification_verification_status%3A%22Unconfirmed%20-%20",
"not%20reviewed%22%20OR%20identification_verification_status%3A%22",
"Unconfirmed%20-%20plausible%22)&fq=-occurrence_status%3A%22absent",
"%22&fq=taxon_name%3A%22",
genus,
"%20",
species,
"%22&pageSize=10000",sep = "")
taxonInfo = GET(api)
taxonInfoContent = httr::content(taxonInfo, as = 'text')
taxonInfoContentJSON = jsonlite::fromJSON(taxonInfoContent)
df=taxonInfoContentJSON$occurrences
print(paste(nonNatives[a],"=",length(df[,1])))
bioblitzFiltered = subset(natbioblitz_nns,
taxon.name == binomClassNm)
plot(st_geometry(uk_map),border="#FFFFFF",axes=TRUE,
xlim=c(-11,3),ylim=c(49,61),
family="mont",col="#E4E6F6")
points(as.numeric(df$decimalLongitude),
as.numeric(df$decimalLatitude),
pch = 19,
col="#00A6FB")
points(as.numeric(bioblitzFiltered$longitude),
as.numeric(bioblitzFiltered$latitude),
pch = 19,
col="#F79824")
title(main = paste(natbioblitz_nns$taxon.common_name.name[a]),
family="chivo",cex.main = 1,line = -1)
legend("top", ,inset = c(0.05),
col = c("#00a6fb","#F79824"),
legend=c("NBN",
"Bioblitz"), horiz = FALSE,cex = 0.9,pch=19,
box.lwd=0.01,box.col = "#191d2d")
mtext("Non-native Invasive Species Records",
side = 3, line = -2, outer = TRUE,col = c("#191d2d"),
font = 2,cex = 1.1,
family="chivo")
rm(taxonInfo,taxonInfoContent,taxonInfoContentJSON,df)
}
